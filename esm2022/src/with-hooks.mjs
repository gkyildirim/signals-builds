import { STATE_SOURCE } from './state-source';
export function withHooks(hooksOrFactory) {
    return (store) => {
        const storeMembers = {
            [STATE_SOURCE]: store[STATE_SOURCE],
            ...store.stateSignals,
            ...store.computedSignals,
            ...store.methods,
        };
        const hooks = typeof hooksOrFactory === 'function'
            ? hooksOrFactory(storeMembers)
            : hooksOrFactory;
        const createHook = (name) => {
            const hook = hooks[name];
            const currentHook = store.hooks[name];
            return hook
                ? () => {
                    if (currentHook) {
                        currentHook();
                    }
                    hook(storeMembers);
                }
                : currentHook;
        };
        return {
            ...store,
            hooks: {
                onInit: createHook('onInit'),
                onDestroy: createHook('onDestroy'),
            },
        };
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2l0aC1ob29rcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc2lnbmFscy9zcmMvd2l0aC1ob29rcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFlLE1BQU0sZ0JBQWdCLENBQUM7QUFzQzNELE1BQU0sVUFBVSxTQUFTLENBQ3ZCLGNBS3VCO0lBRXZCLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUNmLE1BQU0sWUFBWSxHQUFHO1lBQ25CLENBQUMsWUFBWSxDQUFDLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUNuQyxHQUFHLEtBQUssQ0FBQyxZQUFZO1lBQ3JCLEdBQUcsS0FBSyxDQUFDLGVBQWU7WUFDeEIsR0FBRyxLQUFLLENBQUMsT0FBTztTQUNqQixDQUFDO1FBQ0YsTUFBTSxLQUFLLEdBQ1QsT0FBTyxjQUFjLEtBQUssVUFBVTtZQUNsQyxDQUFDLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQztZQUM5QixDQUFDLENBQUMsY0FBYyxDQUFDO1FBQ3JCLE1BQU0sVUFBVSxHQUFHLENBQUMsSUFBd0IsRUFBRSxFQUFFO1lBQzlDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QixNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRXRDLE9BQU8sSUFBSTtnQkFDVCxDQUFDLENBQUMsR0FBRyxFQUFFO29CQUNILElBQUksV0FBVyxFQUFFLENBQUM7d0JBQ2hCLFdBQVcsRUFBRSxDQUFDO29CQUNoQixDQUFDO29CQUVELElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDckIsQ0FBQztnQkFDSCxDQUFDLENBQUMsV0FBVyxDQUFDO1FBQ2xCLENBQUMsQ0FBQztRQUVGLE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixLQUFLLEVBQUU7Z0JBQ0wsTUFBTSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUM7Z0JBQzVCLFNBQVMsRUFBRSxVQUFVLENBQUMsV0FBVyxDQUFDO2FBQ25DO1NBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTVEFURV9TT1VSQ0UsIFN0YXRlU291cmNlIH0gZnJvbSAnLi9zdGF0ZS1zb3VyY2UnO1xuaW1wb3J0IHtcbiAgRW1wdHlGZWF0dXJlUmVzdWx0LFxuICBTaWduYWxTdG9yZUZlYXR1cmUsXG4gIFNpZ25hbFN0b3JlRmVhdHVyZVJlc3VsdCxcbiAgU3RhdGVTaWduYWxzLFxufSBmcm9tICcuL3NpZ25hbC1zdG9yZS1tb2RlbHMnO1xuaW1wb3J0IHsgUHJldHRpZnkgfSBmcm9tICcuL3RzLWhlbHBlcnMnO1xuXG50eXBlIEhvb2tGbjxJbnB1dCBleHRlbmRzIFNpZ25hbFN0b3JlRmVhdHVyZVJlc3VsdD4gPSAoXG4gIHN0b3JlOiBQcmV0dGlmeTxcbiAgICBTdGF0ZVNpZ25hbHM8SW5wdXRbJ3N0YXRlJ10+ICZcbiAgICAgIElucHV0Wydjb21wdXRlZCddICZcbiAgICAgIElucHV0WydtZXRob2RzJ10gJlxuICAgICAgU3RhdGVTb3VyY2U8UHJldHRpZnk8SW5wdXRbJ3N0YXRlJ10+PlxuICA+XG4pID0+IHZvaWQ7XG5cbnR5cGUgSG9va3NGYWN0b3J5PElucHV0IGV4dGVuZHMgU2lnbmFsU3RvcmVGZWF0dXJlUmVzdWx0PiA9IChcbiAgc3RvcmU6IFByZXR0aWZ5PFxuICAgIFN0YXRlU2lnbmFsczxJbnB1dFsnc3RhdGUnXT4gJlxuICAgICAgSW5wdXRbJ2NvbXB1dGVkJ10gJlxuICAgICAgSW5wdXRbJ21ldGhvZHMnXSAmXG4gICAgICBTdGF0ZVNvdXJjZTxQcmV0dGlmeTxJbnB1dFsnc3RhdGUnXT4+XG4gID5cbikgPT4ge1xuICBvbkluaXQ/OiAoKSA9PiB2b2lkO1xuICBvbkRlc3Ryb3k/OiAoKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhIb29rczxJbnB1dCBleHRlbmRzIFNpZ25hbFN0b3JlRmVhdHVyZVJlc3VsdD4oaG9va3M6IHtcbiAgb25Jbml0PzogSG9va0ZuPElucHV0PjtcbiAgb25EZXN0cm95PzogSG9va0ZuPElucHV0Pjtcbn0pOiBTaWduYWxTdG9yZUZlYXR1cmU8SW5wdXQsIEVtcHR5RmVhdHVyZVJlc3VsdD47XG5leHBvcnQgZnVuY3Rpb24gd2l0aEhvb2tzPElucHV0IGV4dGVuZHMgU2lnbmFsU3RvcmVGZWF0dXJlUmVzdWx0PihcbiAgaG9va3M6IEhvb2tzRmFjdG9yeTxJbnB1dD5cbik6IFNpZ25hbFN0b3JlRmVhdHVyZTxJbnB1dCwgRW1wdHlGZWF0dXJlUmVzdWx0PjtcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhIb29rczxJbnB1dCBleHRlbmRzIFNpZ25hbFN0b3JlRmVhdHVyZVJlc3VsdD4oXG4gIGhvb2tzT3JGYWN0b3J5OlxuICAgIHwge1xuICAgICAgICBvbkluaXQ/OiBIb29rRm48SW5wdXQ+O1xuICAgICAgICBvbkRlc3Ryb3k/OiBIb29rRm48SW5wdXQ+O1xuICAgICAgfVxuICAgIHwgSG9va3NGYWN0b3J5PElucHV0PlxuKTogU2lnbmFsU3RvcmVGZWF0dXJlPElucHV0LCBFbXB0eUZlYXR1cmVSZXN1bHQ+IHtcbiAgcmV0dXJuIChzdG9yZSkgPT4ge1xuICAgIGNvbnN0IHN0b3JlTWVtYmVycyA9IHtcbiAgICAgIFtTVEFURV9TT1VSQ0VdOiBzdG9yZVtTVEFURV9TT1VSQ0VdLFxuICAgICAgLi4uc3RvcmUuc3RhdGVTaWduYWxzLFxuICAgICAgLi4uc3RvcmUuY29tcHV0ZWRTaWduYWxzLFxuICAgICAgLi4uc3RvcmUubWV0aG9kcyxcbiAgICB9O1xuICAgIGNvbnN0IGhvb2tzID1cbiAgICAgIHR5cGVvZiBob29rc09yRmFjdG9yeSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IGhvb2tzT3JGYWN0b3J5KHN0b3JlTWVtYmVycylcbiAgICAgICAgOiBob29rc09yRmFjdG9yeTtcbiAgICBjb25zdCBjcmVhdGVIb29rID0gKG5hbWU6IGtleW9mIHR5cGVvZiBob29rcykgPT4ge1xuICAgICAgY29uc3QgaG9vayA9IGhvb2tzW25hbWVdO1xuICAgICAgY29uc3QgY3VycmVudEhvb2sgPSBzdG9yZS5ob29rc1tuYW1lXTtcblxuICAgICAgcmV0dXJuIGhvb2tcbiAgICAgICAgPyAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoY3VycmVudEhvb2spIHtcbiAgICAgICAgICAgICAgY3VycmVudEhvb2soKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaG9vayhzdG9yZU1lbWJlcnMpO1xuICAgICAgICAgIH1cbiAgICAgICAgOiBjdXJyZW50SG9vaztcbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0b3JlLFxuICAgICAgaG9va3M6IHtcbiAgICAgICAgb25Jbml0OiBjcmVhdGVIb29rKCdvbkluaXQnKSxcbiAgICAgICAgb25EZXN0cm95OiBjcmVhdGVIb29rKCdvbkRlc3Ryb3knKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfTtcbn1cbiJdfQ==