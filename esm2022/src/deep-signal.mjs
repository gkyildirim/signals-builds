import { computed, isSignal, untracked, } from '@angular/core';
export function toDeepSignal(signal) {
    const value = untracked(() => signal());
    if (!isRecord(value)) {
        return signal;
    }
    return new Proxy(signal, {
        get(target, prop) {
            if (!(prop in value)) {
                return target[prop];
            }
            if (!isSignal(target[prop])) {
                Object.defineProperty(target, prop, {
                    value: computed(() => target()[prop]),
                });
            }
            return toDeepSignal(target[prop]);
        },
    });
}
function isRecord(value) {
    return value?.constructor === Object;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVlcC1zaWduYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3NpZ25hbHMvc3JjL2RlZXAtc2lnbmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxRQUFRLEVBQ1IsUUFBUSxFQUVSLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQXVCdkIsTUFBTSxVQUFVLFlBQVksQ0FBSSxNQUFpQjtJQUMvQyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sTUFBdUIsQ0FBQztLQUNoQztJQUVELE9BQU8sSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLEdBQUcsQ0FBQyxNQUFXLEVBQUUsSUFBSTtZQUNuQixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLEVBQUU7Z0JBQ3BCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3JCO1lBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtnQkFDM0IsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFO29CQUNsQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUN0QyxDQUFDLENBQUM7YUFDSjtZQUVELE9BQU8sWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLENBQUM7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsS0FBYztJQUM5QixPQUFPLEtBQUssRUFBRSxXQUFXLEtBQUssTUFBTSxDQUFDO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjb21wdXRlZCxcbiAgaXNTaWduYWwsXG4gIFNpZ25hbCBhcyBOZ1NpZ25hbCxcbiAgdW50cmFja2VkLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElzVW5rbm93blJlY29yZCB9IGZyb20gJy4vdHMtaGVscGVycyc7XG5cbi8vIEFuIGV4dGVuZGVkIFNpZ25hbCB0eXBlIHRoYXQgZW5hYmxlcyB0aGUgY29ycmVjdCB0eXBpbmdcbi8vIG9mIG5lc3RlZCBzaWduYWxzIHdpdGggdGhlIGBuYW1lJyBvciBgbGVuZ3RoJyBrZXkuXG5pbnRlcmZhY2UgU2lnbmFsPFQ+IGV4dGVuZHMgTmdTaWduYWw8VD4ge1xuICBuYW1lOiB1bmtub3duO1xuICBsZW5ndGg6IHVua25vd247XG59XG5cbmV4cG9ydCB0eXBlIERlZXBTaWduYWw8VD4gPSBTaWduYWw8VD4gJlxuICAoVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+XG4gICAgPyBJc1Vua25vd25SZWNvcmQ8VD4gZXh0ZW5kcyB0cnVlXG4gICAgICA/IHVua25vd25cbiAgICAgIDogUmVhZG9ubHk8e1xuICAgICAgICAgIFtLIGluIGtleW9mIFRdOiBUW0tdIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj5cbiAgICAgICAgICAgID8gSXNVbmtub3duUmVjb3JkPFRbS10+IGV4dGVuZHMgdHJ1ZVxuICAgICAgICAgICAgICA/IFNpZ25hbDxUW0tdPlxuICAgICAgICAgICAgICA6IERlZXBTaWduYWw8VFtLXT5cbiAgICAgICAgICAgIDogU2lnbmFsPFRbS10+O1xuICAgICAgICB9PlxuICAgIDogdW5rbm93bik7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0RlZXBTaWduYWw8VD4oc2lnbmFsOiBTaWduYWw8VD4pOiBEZWVwU2lnbmFsPFQ+IHtcbiAgY29uc3QgdmFsdWUgPSB1bnRyYWNrZWQoKCkgPT4gc2lnbmFsKCkpO1xuICBpZiAoIWlzUmVjb3JkKHZhbHVlKSkge1xuICAgIHJldHVybiBzaWduYWwgYXMgRGVlcFNpZ25hbDxUPjtcbiAgfVxuXG4gIHJldHVybiBuZXcgUHJveHkoc2lnbmFsLCB7XG4gICAgZ2V0KHRhcmdldDogYW55LCBwcm9wKSB7XG4gICAgICBpZiAoIShwcm9wIGluIHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzU2lnbmFsKHRhcmdldFtwcm9wXSkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcCwge1xuICAgICAgICAgIHZhbHVlOiBjb21wdXRlZCgoKSA9PiB0YXJnZXQoKVtwcm9wXSksXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdG9EZWVwU2lnbmFsKHRhcmdldFtwcm9wXSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGlzUmVjb3JkKHZhbHVlOiB1bmtub3duKTogdmFsdWUgaXMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4ge1xuICByZXR1cm4gdmFsdWU/LmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG4iXX0=