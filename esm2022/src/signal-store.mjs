import { DestroyRef, inject, Injectable, signal } from '@angular/core';
import { STATE_SOURCE } from './state-source';
import * as i0 from "@angular/core";
export function signalStore(...args) {
    const signalStoreArgs = [...args];
    const config = 'providedIn' in signalStoreArgs[0]
        ? signalStoreArgs.shift()
        : {};
    const features = signalStoreArgs;
    class SignalStore {
        constructor() {
            const innerStore = features.reduce((store, feature) => feature(store), getInitialInnerStore());
            const { stateSignals, computedSignals, methods, hooks } = innerStore;
            const storeMembers = { ...stateSignals, ...computedSignals, ...methods };
            this[STATE_SOURCE] = innerStore[STATE_SOURCE];
            for (const key in storeMembers) {
                this[key] = storeMembers[key];
            }
            const { onInit, onDestroy } = hooks;
            if (onInit) {
                onInit();
            }
            if (onDestroy) {
                inject(DestroyRef).onDestroy(onDestroy);
            }
        }
        /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: SignalStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
        /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: SignalStore, providedIn: config.providedIn || null });
    }
    i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: SignalStore, decorators: [{
                type: Injectable,
                args: [{ providedIn: config.providedIn || null }]
            }], ctorParameters: () => [] });
    return SignalStore;
}
export function getInitialInnerStore() {
    return {
        [STATE_SOURCE]: signal({}),
        stateSignals: {},
        computedSignals: {},
        methods: {},
        hooks: {},
    };
}
//# sourceMappingURL=data:application/json;base64,