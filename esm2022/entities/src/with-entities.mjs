import { computed } from '@angular/core';
import { signalStoreFeature, withComputed, withState, } from '@ngrx/signals';
import { getEntityStateKeys } from './helpers';
export function withEntities(config) {
    const { entityMapKey, idsKey, entitiesKey } = getEntityStateKeys(config);
    return signalStoreFeature(withState({
        [entityMapKey]: {},
        [idsKey]: [],
    }), withComputed((store) => ({
        [entitiesKey]: computed(() => {
            const entityMap = store[entityMapKey]();
            const ids = store[idsKey]();
            return ids.map((id) => entityMap[id]);
        }),
    })));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2l0aC1lbnRpdGllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc2lnbmFscy9lbnRpdGllcy9zcmMvd2l0aC1lbnRpdGllcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFHTCxrQkFBa0IsRUFDbEIsWUFBWSxFQUNaLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQVN2QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUErQi9DLE1BQU0sVUFBVSxZQUFZLENBQVMsTUFHcEM7SUFDQyxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV6RSxPQUFPLGtCQUFrQixDQUN2QixTQUFTLENBQUM7UUFDUixDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUU7UUFDbEIsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO0tBQ2IsQ0FBQyxFQUNGLFlBQVksQ0FBQyxDQUFDLEtBQXNDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDeEQsQ0FBQyxXQUFXLENBQUMsRUFBRSxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQzNCLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBdUIsQ0FBQztZQUM3RCxNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQWdCLENBQUM7WUFFMUMsT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUM7S0FDSCxDQUFDLENBQUMsQ0FDSixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbXB1dGVkLCBTaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEVtcHR5RmVhdHVyZVJlc3VsdCxcbiAgU2lnbmFsU3RvcmVGZWF0dXJlLFxuICBzaWduYWxTdG9yZUZlYXR1cmUsXG4gIHdpdGhDb21wdXRlZCxcbiAgd2l0aFN0YXRlLFxufSBmcm9tICdAbmdyeC9zaWduYWxzJztcbmltcG9ydCB7XG4gIEVudGl0eUNvbXB1dGVkLFxuICBFbnRpdHlJZCxcbiAgRW50aXR5TWFwLFxuICBFbnRpdHlTdGF0ZSxcbiAgTmFtZWRFbnRpdHlDb21wdXRlZCxcbiAgTmFtZWRFbnRpdHlTdGF0ZSxcbn0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IHsgZ2V0RW50aXR5U3RhdGVLZXlzIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdpdGhFbnRpdGllczxFbnRpdHk+KCk6IFNpZ25hbFN0b3JlRmVhdHVyZTxcbiAgRW1wdHlGZWF0dXJlUmVzdWx0LFxuICB7XG4gICAgc3RhdGU6IEVudGl0eVN0YXRlPEVudGl0eT47XG4gICAgY29tcHV0ZWQ6IEVudGl0eUNvbXB1dGVkPEVudGl0eT47XG4gICAgbWV0aG9kczoge307XG4gIH1cbj47XG5leHBvcnQgZnVuY3Rpb24gd2l0aEVudGl0aWVzPEVudGl0eSwgQ29sbGVjdGlvbiBleHRlbmRzIHN0cmluZz4oY29uZmlnOiB7XG4gIGVudGl0eTogRW50aXR5O1xuICBjb2xsZWN0aW9uOiBDb2xsZWN0aW9uO1xufSk6IFNpZ25hbFN0b3JlRmVhdHVyZTxcbiAgRW1wdHlGZWF0dXJlUmVzdWx0LFxuICB7XG4gICAgc3RhdGU6IE5hbWVkRW50aXR5U3RhdGU8RW50aXR5LCBDb2xsZWN0aW9uPjtcbiAgICBjb21wdXRlZDogTmFtZWRFbnRpdHlDb21wdXRlZDxFbnRpdHksIENvbGxlY3Rpb24+O1xuICAgIG1ldGhvZHM6IHt9O1xuICB9XG4+O1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhFbnRpdGllczxFbnRpdHk+KGNvbmZpZzoge1xuICBlbnRpdHk6IEVudGl0eTtcbn0pOiBTaWduYWxTdG9yZUZlYXR1cmU8XG4gIEVtcHR5RmVhdHVyZVJlc3VsdCxcbiAge1xuICAgIHN0YXRlOiBFbnRpdHlTdGF0ZTxFbnRpdHk+O1xuICAgIGNvbXB1dGVkOiBFbnRpdHlDb21wdXRlZDxFbnRpdHk+O1xuICAgIG1ldGhvZHM6IHt9O1xuICB9XG4+O1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhFbnRpdGllczxFbnRpdHk+KGNvbmZpZz86IHtcbiAgZW50aXR5OiBFbnRpdHk7XG4gIGNvbGxlY3Rpb24/OiBzdHJpbmc7XG59KTogU2lnbmFsU3RvcmVGZWF0dXJlIHtcbiAgY29uc3QgeyBlbnRpdHlNYXBLZXksIGlkc0tleSwgZW50aXRpZXNLZXkgfSA9IGdldEVudGl0eVN0YXRlS2V5cyhjb25maWcpO1xuXG4gIHJldHVybiBzaWduYWxTdG9yZUZlYXR1cmUoXG4gICAgd2l0aFN0YXRlKHtcbiAgICAgIFtlbnRpdHlNYXBLZXldOiB7fSxcbiAgICAgIFtpZHNLZXldOiBbXSxcbiAgICB9KSxcbiAgICB3aXRoQ29tcHV0ZWQoKHN0b3JlOiBSZWNvcmQ8c3RyaW5nLCBTaWduYWw8dW5rbm93bj4+KSA9PiAoe1xuICAgICAgW2VudGl0aWVzS2V5XTogY29tcHV0ZWQoKCkgPT4ge1xuICAgICAgICBjb25zdCBlbnRpdHlNYXAgPSBzdG9yZVtlbnRpdHlNYXBLZXldKCkgYXMgRW50aXR5TWFwPEVudGl0eT47XG4gICAgICAgIGNvbnN0IGlkcyA9IHN0b3JlW2lkc0tleV0oKSBhcyBFbnRpdHlJZFtdO1xuXG4gICAgICAgIHJldHVybiBpZHMubWFwKChpZCkgPT4gZW50aXR5TWFwW2lkXSk7XG4gICAgICB9KSxcbiAgICB9KSlcbiAgKTtcbn1cbiJdfQ==