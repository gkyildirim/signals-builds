import { cloneEntityState, getEntityIdSelector, getEntityStateKeys, getEntityUpdaterResult, updateEntitiesMutably, } from '../helpers';
export function updateEntities(update, config) {
    const selectId = getEntityIdSelector(config);
    const stateKeys = getEntityStateKeys(config);
    const idsOrPredicate = 'ids' in update ? update.ids : update.predicate;
    return (state) => {
        const clonedState = cloneEntityState(state, stateKeys);
        const didMutate = updateEntitiesMutably(clonedState, idsOrPredicate, update.changes, selectId);
        return getEntityUpdaterResult(clonedState, stateKeys, didMutate);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLWVudGl0aWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9zaWduYWxzL2VudGl0aWVzL3NyYy91cGRhdGVycy91cGRhdGUtZW50aXRpZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0EsT0FBTyxFQUNMLGdCQUFnQixFQUNoQixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLHNCQUFzQixFQUN0QixxQkFBcUIsR0FDdEIsTUFBTSxZQUFZLENBQUM7QUFvRnBCLE1BQU0sVUFBVSxjQUFjLENBQzVCLE1BRUMsRUFDRCxNQUFnRTtJQUVoRSxNQUFNLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3QyxNQUFNLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3QyxNQUFNLGNBQWMsR0FBRyxLQUFLLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDO0lBRXZFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUNmLE1BQU0sV0FBVyxHQUFHLGdCQUFnQixDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN2RCxNQUFNLFNBQVMsR0FBRyxxQkFBcUIsQ0FDckMsV0FBVyxFQUNYLGNBQWMsRUFDZCxNQUFNLENBQUMsT0FBTyxFQUNkLFFBQVEsQ0FDVCxDQUFDO1FBRUYsT0FBTyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ25FLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJ0aWFsU3RhdGVVcGRhdGVyIH0gZnJvbSAnQG5ncngvc2lnbmFscyc7XG5pbXBvcnQge1xuICBFbnRpdHlDaGFuZ2VzLFxuICBFbnRpdHlJZCxcbiAgRW50aXR5UHJlZGljYXRlLFxuICBFbnRpdHlTdGF0ZSxcbiAgTmFtZWRFbnRpdHlTdGF0ZSxcbiAgU2VsZWN0RW50aXR5SWQsXG59IGZyb20gJy4uL21vZGVscyc7XG5pbXBvcnQge1xuICBjbG9uZUVudGl0eVN0YXRlLFxuICBnZXRFbnRpdHlJZFNlbGVjdG9yLFxuICBnZXRFbnRpdHlTdGF0ZUtleXMsXG4gIGdldEVudGl0eVVwZGF0ZXJSZXN1bHQsXG4gIHVwZGF0ZUVudGl0aWVzTXV0YWJseSxcbn0gZnJvbSAnLi4vaGVscGVycyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFbnRpdGllczxcbiAgQ29sbGVjdGlvbiBleHRlbmRzIHN0cmluZyxcbiAgU3RhdGUgZXh0ZW5kcyBOYW1lZEVudGl0eVN0YXRlPGFueSwgQ29sbGVjdGlvbj4sXG4gIEVudGl0eSA9IFN0YXRlIGV4dGVuZHMgTmFtZWRFbnRpdHlTdGF0ZTxpbmZlciBFLCBDb2xsZWN0aW9uPiA/IEUgOiBuZXZlclxuPihcbiAgdXBkYXRlOiB7XG4gICAgaWRzOiBFbnRpdHlJZFtdO1xuICAgIGNoYW5nZXM6IEVudGl0eUNoYW5nZXM8Tm9JbmZlcjxFbnRpdHk+PjtcbiAgfSxcbiAgY29uZmlnOiB7XG4gICAgY29sbGVjdGlvbjogQ29sbGVjdGlvbjtcbiAgICBzZWxlY3RJZDogU2VsZWN0RW50aXR5SWQ8Tm9JbmZlcjxFbnRpdHk+PjtcbiAgfVxuKTogUGFydGlhbFN0YXRlVXBkYXRlcjxTdGF0ZT47XG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRW50aXRpZXM8XG4gIENvbGxlY3Rpb24gZXh0ZW5kcyBzdHJpbmcsXG4gIFN0YXRlIGV4dGVuZHMgTmFtZWRFbnRpdHlTdGF0ZTxhbnksIENvbGxlY3Rpb24+LFxuICBFbnRpdHkgPSBTdGF0ZSBleHRlbmRzIE5hbWVkRW50aXR5U3RhdGU8aW5mZXIgRSwgQ29sbGVjdGlvbj4gPyBFIDogbmV2ZXJcbj4oXG4gIHVwZGF0ZToge1xuICAgIHByZWRpY2F0ZTogRW50aXR5UHJlZGljYXRlPEVudGl0eT47XG4gICAgY2hhbmdlczogRW50aXR5Q2hhbmdlczxOb0luZmVyPEVudGl0eT4+O1xuICB9LFxuICBjb25maWc6IHtcbiAgICBjb2xsZWN0aW9uOiBDb2xsZWN0aW9uO1xuICAgIHNlbGVjdElkOiBTZWxlY3RFbnRpdHlJZDxOb0luZmVyPEVudGl0eT4+O1xuICB9XG4pOiBQYXJ0aWFsU3RhdGVVcGRhdGVyPFN0YXRlPjtcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFbnRpdGllczxcbiAgQ29sbGVjdGlvbiBleHRlbmRzIHN0cmluZyxcbiAgU3RhdGUgZXh0ZW5kcyBOYW1lZEVudGl0eVN0YXRlPGFueSwgQ29sbGVjdGlvbj4sXG4gIEVudGl0eSA9IFN0YXRlIGV4dGVuZHMgTmFtZWRFbnRpdHlTdGF0ZTxcbiAgICBpbmZlciBFIGV4dGVuZHMgeyBpZDogRW50aXR5SWQgfSxcbiAgICBDb2xsZWN0aW9uXG4gID5cbiAgICA/IEVcbiAgICA6IG5ldmVyXG4+KFxuICB1cGRhdGU6IHtcbiAgICBpZHM6IEVudGl0eUlkW107XG4gICAgY2hhbmdlczogRW50aXR5Q2hhbmdlczxOb0luZmVyPEVudGl0eT4+O1xuICB9LFxuICBjb25maWc6IHsgY29sbGVjdGlvbjogQ29sbGVjdGlvbiB9XG4pOiBQYXJ0aWFsU3RhdGVVcGRhdGVyPFN0YXRlPjtcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFbnRpdGllczxcbiAgQ29sbGVjdGlvbiBleHRlbmRzIHN0cmluZyxcbiAgU3RhdGUgZXh0ZW5kcyBOYW1lZEVudGl0eVN0YXRlPGFueSwgQ29sbGVjdGlvbj4sXG4gIEVudGl0eSA9IFN0YXRlIGV4dGVuZHMgTmFtZWRFbnRpdHlTdGF0ZTxcbiAgICBpbmZlciBFIGV4dGVuZHMgeyBpZDogRW50aXR5SWQgfSxcbiAgICBDb2xsZWN0aW9uXG4gID5cbiAgICA/IEVcbiAgICA6IG5ldmVyXG4+KFxuICB1cGRhdGU6IHtcbiAgICBwcmVkaWNhdGU6IEVudGl0eVByZWRpY2F0ZTxFbnRpdHk+O1xuICAgIGNoYW5nZXM6IEVudGl0eUNoYW5nZXM8Tm9JbmZlcjxFbnRpdHk+PjtcbiAgfSxcbiAgY29uZmlnOiB7IGNvbGxlY3Rpb246IENvbGxlY3Rpb24gfVxuKTogUGFydGlhbFN0YXRlVXBkYXRlcjxTdGF0ZT47XG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRW50aXRpZXM8RW50aXR5PihcbiAgdXBkYXRlOiB7XG4gICAgaWRzOiBFbnRpdHlJZFtdO1xuICAgIGNoYW5nZXM6IEVudGl0eUNoYW5nZXM8Tm9JbmZlcjxFbnRpdHk+PjtcbiAgfSxcbiAgY29uZmlnOiB7IHNlbGVjdElkOiBTZWxlY3RFbnRpdHlJZDxOb0luZmVyPEVudGl0eT4+IH1cbik6IFBhcnRpYWxTdGF0ZVVwZGF0ZXI8RW50aXR5U3RhdGU8RW50aXR5Pj47XG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRW50aXRpZXM8RW50aXR5PihcbiAgdXBkYXRlOiB7XG4gICAgcHJlZGljYXRlOiBFbnRpdHlQcmVkaWNhdGU8RW50aXR5PjtcbiAgICBjaGFuZ2VzOiBFbnRpdHlDaGFuZ2VzPE5vSW5mZXI8RW50aXR5Pj47XG4gIH0sXG4gIGNvbmZpZzogeyBzZWxlY3RJZDogU2VsZWN0RW50aXR5SWQ8Tm9JbmZlcjxFbnRpdHk+PiB9XG4pOiBQYXJ0aWFsU3RhdGVVcGRhdGVyPEVudGl0eVN0YXRlPEVudGl0eT4+O1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUVudGl0aWVzPEVudGl0eSBleHRlbmRzIHsgaWQ6IEVudGl0eUlkIH0+KHVwZGF0ZToge1xuICBpZHM6IEVudGl0eUlkW107XG4gIGNoYW5nZXM6IEVudGl0eUNoYW5nZXM8Tm9JbmZlcjxFbnRpdHk+Pjtcbn0pOiBQYXJ0aWFsU3RhdGVVcGRhdGVyPEVudGl0eVN0YXRlPEVudGl0eT4+O1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUVudGl0aWVzPEVudGl0eSBleHRlbmRzIHsgaWQ6IEVudGl0eUlkIH0+KHVwZGF0ZToge1xuICBwcmVkaWNhdGU6IEVudGl0eVByZWRpY2F0ZTxFbnRpdHk+O1xuICBjaGFuZ2VzOiBFbnRpdHlDaGFuZ2VzPE5vSW5mZXI8RW50aXR5Pj47XG59KTogUGFydGlhbFN0YXRlVXBkYXRlcjxFbnRpdHlTdGF0ZTxFbnRpdHk+PjtcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFbnRpdGllcyhcbiAgdXBkYXRlOiAoeyBpZHM6IEVudGl0eUlkW10gfSB8IHsgcHJlZGljYXRlOiBFbnRpdHlQcmVkaWNhdGU8YW55PiB9KSAmIHtcbiAgICBjaGFuZ2VzOiBFbnRpdHlDaGFuZ2VzPGFueT47XG4gIH0sXG4gIGNvbmZpZz86IHsgY29sbGVjdGlvbj86IHN0cmluZzsgc2VsZWN0SWQ/OiBTZWxlY3RFbnRpdHlJZDxhbnk+IH1cbik6IFBhcnRpYWxTdGF0ZVVwZGF0ZXI8RW50aXR5U3RhdGU8YW55PiB8IE5hbWVkRW50aXR5U3RhdGU8YW55LCBzdHJpbmc+PiB7XG4gIGNvbnN0IHNlbGVjdElkID0gZ2V0RW50aXR5SWRTZWxlY3Rvcihjb25maWcpO1xuICBjb25zdCBzdGF0ZUtleXMgPSBnZXRFbnRpdHlTdGF0ZUtleXMoY29uZmlnKTtcbiAgY29uc3QgaWRzT3JQcmVkaWNhdGUgPSAnaWRzJyBpbiB1cGRhdGUgPyB1cGRhdGUuaWRzIDogdXBkYXRlLnByZWRpY2F0ZTtcblxuICByZXR1cm4gKHN0YXRlKSA9PiB7XG4gICAgY29uc3QgY2xvbmVkU3RhdGUgPSBjbG9uZUVudGl0eVN0YXRlKHN0YXRlLCBzdGF0ZUtleXMpO1xuICAgIGNvbnN0IGRpZE11dGF0ZSA9IHVwZGF0ZUVudGl0aWVzTXV0YWJseShcbiAgICAgIGNsb25lZFN0YXRlLFxuICAgICAgaWRzT3JQcmVkaWNhdGUsXG4gICAgICB1cGRhdGUuY2hhbmdlcyxcbiAgICAgIHNlbGVjdElkXG4gICAgKTtcblxuICAgIHJldHVybiBnZXRFbnRpdHlVcGRhdGVyUmVzdWx0KGNsb25lZFN0YXRlLCBzdGF0ZUtleXMsIGRpZE11dGF0ZSk7XG4gIH07XG59XG4iXX0=