{"version":3,"file":"ngrx-signals.mjs","sources":["../../../../modules/signals/src/deep-signal.ts","../../../../modules/signals/src/signal-state.ts","../../../../modules/signals/src/get-state.ts","../../../../modules/signals/src/patch-state.ts","../../../../modules/signals/src/signal-store.ts","../../../../modules/signals/src/signal-store-feature.ts","../../../../modules/signals/src/helpers.ts","../../../../modules/signals/src/with-computed.ts","../../../../modules/signals/src/with-hooks.ts","../../../../modules/signals/src/with-methods.ts","../../../../modules/signals/src/with-state.ts","../../../../modules/signals/ngrx-signals.ts"],"sourcesContent":["import {\n  computed,\n  isSignal,\n  Signal as NgSignal,\n  untracked,\n} from '@angular/core';\nimport { IsKnownRecord } from './ts-helpers';\n\n// An extended Signal type that enables the correct typing\n// of nested signals with the `name` or `length` key.\ninterface Signal<T> extends NgSignal<T> {\n  name: unknown;\n  length: unknown;\n}\n\nexport type DeepSignal<T> = Signal<T> &\n  (IsKnownRecord<T> extends true\n    ? Readonly<{\n        [K in keyof T]: IsKnownRecord<T[K]> extends true\n          ? DeepSignal<T[K]>\n          : Signal<T[K]>;\n      }>\n    : unknown);\n\nexport function toDeepSignal<T>(signal: Signal<T>): DeepSignal<T> {\n  const value = untracked(() => signal());\n  if (!isRecord(value)) {\n    return signal as DeepSignal<T>;\n  }\n\n  return new Proxy(signal, {\n    get(target: any, prop) {\n      if (!(prop in value)) {\n        return target[prop];\n      }\n\n      if (!isSignal(target[prop])) {\n        Object.defineProperty(target, prop, {\n          value: computed(() => target()[prop]),\n          configurable: true,\n        });\n      }\n\n      return toDeepSignal(target[prop]);\n    },\n  });\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value?.constructor === Object;\n}\n","import { signal, WritableSignal } from '@angular/core';\nimport { DeepSignal, toDeepSignal } from './deep-signal';\n\nexport const STATE_SIGNAL = Symbol('STATE_SIGNAL');\n\nexport type SignalStateMeta<State extends object> = {\n  [STATE_SIGNAL]: WritableSignal<State>;\n};\n\ntype SignalState<State extends object> = DeepSignal<State> &\n  SignalStateMeta<State>;\n\nexport function signalState<State extends object>(\n  initialState: State\n): SignalState<State> {\n  const stateSignal = signal(initialState as State);\n  const deepSignal = toDeepSignal(stateSignal.asReadonly());\n  Object.defineProperty(deepSignal, STATE_SIGNAL, {\n    value: stateSignal,\n  });\n\n  return deepSignal as SignalState<State>;\n}\n","import { STATE_SIGNAL, SignalStateMeta } from './signal-state';\n\nexport function getState<State extends object>(\n  signalState: SignalStateMeta<State>\n): State {\n  return signalState[STATE_SIGNAL]();\n}\n","import { STATE_SIGNAL, SignalStateMeta } from './signal-state';\n\nexport type PartialStateUpdater<State extends object> = (\n  state: State\n) => Partial<State>;\n\nexport function patchState<State extends object>(\n  signalState: SignalStateMeta<State>,\n  ...updaters: Array<Partial<State & {}> | PartialStateUpdater<State & {}>>\n): void {\n  signalState[STATE_SIGNAL].update((currentState) =>\n    updaters.reduce(\n      (nextState: State, updater) => ({\n        ...nextState,\n        ...(typeof updater === 'function' ? updater(nextState) : updater),\n      }),\n      currentState\n    )\n  );\n}\n","import {\n  DestroyRef,\n  inject,\n  Injectable,\n  Injector,\n  runInInjectionContext,\n  signal,\n  Type,\n} from '@angular/core';\nimport { STATE_SIGNAL } from './signal-state';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  MergeFeatureResults,\n  SignalStore,\n  SignalStoreConfig,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStore<F1>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStore<MergeFeatureResults<[F1, F2]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8, F9]>>>;\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStore<F1>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStore<MergeFeatureResults<[F1, F2]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStore<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8, F9]>>>;\n\nexport function signalStore(\n  ...args: [SignalStoreConfig, ...SignalStoreFeature[]] | SignalStoreFeature[]\n): Type<SignalStore<any>> {\n  const signalStoreArgs = [...args];\n\n  const config: Partial<SignalStoreConfig> =\n    'providedIn' in signalStoreArgs[0]\n      ? (signalStoreArgs.shift() as SignalStoreConfig)\n      : {};\n  const features = signalStoreArgs as SignalStoreFeature[];\n\n  @Injectable({ providedIn: config.providedIn || null })\n  class SignalStore {\n    constructor() {\n      const innerStore = features.reduce(\n        (store, feature) => feature(store),\n        getInitialInnerStore()\n      );\n      const { slices, signals, methods, hooks } = innerStore;\n      const props = { ...slices, ...signals, ...methods };\n\n      (this as any)[STATE_SIGNAL] = innerStore[STATE_SIGNAL];\n\n      for (const key in props) {\n        (this as any)[key] = props[key];\n      }\n\n      if (hooks.onInit) {\n        hooks.onInit();\n      }\n\n      if (hooks.onDestroy) {\n        const injector = inject(Injector);\n\n        inject(DestroyRef).onDestroy(() => {\n          runInInjectionContext(injector, hooks.onDestroy!);\n        });\n      }\n    }\n  }\n\n  return SignalStore;\n}\n\nexport function getInitialInnerStore(): InnerSignalStore {\n  return {\n    [STATE_SIGNAL]: signal({}),\n    slices: {},\n    signals: {},\n    methods: {},\n    hooks: {},\n  };\n}\n","import {\n  EmptyFeatureResult,\n  MergeFeatureResults,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function signalStoreFeature<F1 extends SignalStoreFeatureResult>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): SignalStoreFeature<EmptyFeatureResult, F1>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): SignalStoreFeature<EmptyFeatureResult, MergeFeatureResults<[F1, F2]>>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): SignalStoreFeature<EmptyFeatureResult, MergeFeatureResults<[F1, F2, F3]>>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4]>\n>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>\n>;\n\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>\n): SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  Input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >,\n  f5: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4]>,\n    F5\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >,\n  f5: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4]>,\n    F5\n  >,\n  f6: SignalStoreFeature<\n    MergeFeatureResults<\n      [Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4, F5]\n    >,\n    F6\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>\n>;\n\nexport function signalStoreFeature(\n  featureOrInput: SignalStoreFeature | Partial<SignalStoreFeatureResult>,\n  ...restFeatures: SignalStoreFeature[]\n): SignalStoreFeature {\n  const features =\n    typeof featureOrInput === 'function'\n      ? [featureOrInput, ...restFeatures]\n      : restFeatures;\n\n  return (inputStore) =>\n    features.reduce((store, feature) => feature(store), inputStore);\n}\n\nexport function type<T>(): T {\n  return undefined as T;\n}\n","export function excludeKeys<\n  Obj extends Record<string, unknown>,\n  Keys extends string[]\n>(obj: Obj, keys: Keys): Omit<Obj, Keys[number]> {\n  return Object.keys(obj).reduce(\n    (acc, key) => (keys.includes(key) ? acc : { ...acc, [key]: obj[key] }),\n    {}\n  ) as Omit<Obj, Keys[number]>;\n}\n","import { excludeKeys } from './helpers';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreSlices,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function withComputed<\n  Input extends SignalStoreFeatureResult,\n  Signals extends SignalsDictionary\n>(\n  signalsFactory: (\n    store: Prettify<SignalStoreSlices<Input['state']> & Input['signals']>\n  ) => Signals\n): SignalStoreFeature<Input, EmptyFeatureResult & { signals: Signals }> {\n  return (store) => {\n    const signals = signalsFactory({ ...store.slices, ...store.signals });\n    const signalsKeys = Object.keys(signals);\n    const slices = excludeKeys(store.slices, signalsKeys);\n    const methods = excludeKeys(store.methods, signalsKeys);\n\n    return {\n      ...store,\n      slices,\n      signals: { ...store.signals, ...signals },\n      methods,\n    } as InnerSignalStore<Record<string, unknown>, Signals>;\n  };\n}\n","import { STATE_SIGNAL, SignalStateMeta } from './signal-state';\nimport {\n  EmptyFeatureResult,\n  SignalStoreFeature,\n  SignalStoreSlices,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\ntype HooksFactory<Input extends SignalStoreFeatureResult> = (\n  store: Prettify<\n    SignalStoreSlices<Input['state']> &\n      Input['signals'] &\n      Input['methods'] &\n      SignalStateMeta<Prettify<Input['state']>>\n  >\n) => void;\n\nexport function withHooks<Input extends SignalStoreFeatureResult>(hooks: {\n  onInit?: HooksFactory<Input>;\n  onDestroy?: HooksFactory<Input>;\n}): SignalStoreFeature<Input, EmptyFeatureResult> {\n  return (store) => {\n    const createHook = (name: keyof typeof hooks) => {\n      const hook = hooks[name];\n      const currentHook = store.hooks[name];\n\n      return hook\n        ? () => {\n            if (currentHook) {\n              currentHook();\n            }\n\n            hook({\n              [STATE_SIGNAL]: store[STATE_SIGNAL],\n              ...store.slices,\n              ...store.signals,\n              ...store.methods,\n            });\n          }\n        : currentHook;\n    };\n\n    return {\n      ...store,\n      hooks: {\n        onInit: createHook('onInit'),\n        onDestroy: createHook('onDestroy'),\n      },\n    };\n  };\n}\n","import { excludeKeys } from './helpers';\nimport { STATE_SIGNAL, SignalStateMeta } from './signal-state';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  MethodsDictionary,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreSlices,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function withMethods<\n  Input extends SignalStoreFeatureResult,\n  Methods extends MethodsDictionary\n>(\n  methodsFactory: (\n    store: Prettify<\n      SignalStoreSlices<Input['state']> &\n        Input['signals'] &\n        Input['methods'] &\n        SignalStateMeta<Prettify<Input['state']>>\n    >\n  ) => Methods\n): SignalStoreFeature<Input, EmptyFeatureResult & { methods: Methods }> {\n  return (store) => {\n    const methods = methodsFactory({\n      [STATE_SIGNAL]: store[STATE_SIGNAL],\n      ...store.slices,\n      ...store.signals,\n      ...store.methods,\n    });\n    const methodsKeys = Object.keys(methods);\n    const slices = excludeKeys(store.slices, methodsKeys);\n    const signals = excludeKeys(store.signals, methodsKeys);\n\n    return {\n      ...store,\n      slices,\n      signals,\n      methods: { ...store.methods, ...methods },\n    } as InnerSignalStore<Record<string, unknown>, SignalsDictionary, Methods>;\n  };\n}\n","import { computed } from '@angular/core';\nimport { toDeepSignal } from './deep-signal';\nimport { excludeKeys } from './helpers';\nimport { STATE_SIGNAL } from './signal-state';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\n\nexport function withState<State extends object>(\n  stateFactory: () => State\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & { state: State }\n>;\nexport function withState<State extends object>(\n  state: State\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & { state: State }\n>;\nexport function withState<State extends object>(\n  stateOrFactory: State | (() => State)\n): SignalStoreFeature<\n  SignalStoreFeatureResult,\n  EmptyFeatureResult & { state: State }\n> {\n  return (store) => {\n    const state =\n      typeof stateOrFactory === 'function' ? stateOrFactory() : stateOrFactory;\n    const stateKeys = Object.keys(state);\n\n    store[STATE_SIGNAL].update((currentState) => ({\n      ...currentState,\n      ...state,\n    }));\n\n    const slices = stateKeys.reduce((acc, key) => {\n      const slice = computed(\n        () => (store[STATE_SIGNAL]() as Record<string, unknown>)[key]\n      );\n      return { ...acc, [key]: toDeepSignal(slice) };\n    }, {} as SignalsDictionary);\n    const signals = excludeKeys(store.signals, stateKeys);\n    const methods = excludeKeys(store.methods, stateKeys);\n\n    return {\n      ...store,\n      slices: { ...store.slices, ...slices },\n      signals,\n      methods,\n    } as InnerSignalStore<State>;\n  };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;AAwBM,SAAU,YAAY,CAAI,MAAiB,EAAA;IAC/C,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,MAAM,EAAE,CAAC,CAAC;AACxC,IAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACpB,QAAA,OAAO,MAAuB,CAAC;AAChC,KAAA;AAED,IAAA,OAAO,IAAI,KAAK,CAAC,MAAM,EAAE;QACvB,GAAG,CAAC,MAAW,EAAE,IAAI,EAAA;AACnB,YAAA,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE;AACpB,gBAAA,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACrB,aAAA;YAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3B,gBAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE;oBAClC,KAAK,EAAE,QAAQ,CAAC,MAAM,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC;AACrC,oBAAA,YAAY,EAAE,IAAI;AACnB,iBAAA,CAAC,CAAC;AACJ,aAAA;AAED,YAAA,OAAO,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;SACnC;AACF,KAAA,CAAC,CAAC;AACL,CAAC;AAED,SAAS,QAAQ,CAAC,KAAc,EAAA;AAC9B,IAAA,OAAO,KAAK,EAAE,WAAW,KAAK,MAAM,CAAC;AACvC;;AC/CO,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAS7C,SAAU,WAAW,CACzB,YAAmB,EAAA;AAEnB,IAAA,MAAM,WAAW,GAAG,MAAM,CAAC,YAAqB,CAAC,CAAC;IAClD,MAAM,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC;AAC1D,IAAA,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE;AAC9C,QAAA,KAAK,EAAE,WAAW;AACnB,KAAA,CAAC,CAAC;AAEH,IAAA,OAAO,UAAgC,CAAC;AAC1C;;ACpBM,SAAU,QAAQ,CACtB,WAAmC,EAAA;AAEnC,IAAA,OAAO,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC;AACrC;;SCAgB,UAAU,CACxB,WAAmC,EACnC,GAAG,QAAsE,EAAA;IAEzE,WAAW,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,KAC5C,QAAQ,CAAC,MAAM,CACb,CAAC,SAAgB,EAAE,OAAO,MAAM;AAC9B,QAAA,GAAG,SAAS;AACZ,QAAA,IAAI,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO;AACjE,KAAA,CAAC,EACF,YAAY,CACb,CACF,CAAC;AACJ;;ACwPgB,SAAA,WAAW,CACzB,GAAG,IAAyE,EAAA;AAE5E,IAAA,MAAM,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AAElC,IAAA,MAAM,MAAM,GACV,YAAY,IAAI,eAAe,CAAC,CAAC,CAAC;AAChC,UAAG,eAAe,CAAC,KAAK,EAAwB;UAC9C,EAAE,CAAC;IACT,MAAM,QAAQ,GAAG,eAAuC,CAAC;AAEzD,IAAA,MACM,WAAW,CAAA;AACf,QAAA,WAAA,GAAA;YACE,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAChC,CAAC,KAAK,EAAE,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,EAClC,oBAAoB,EAAE,CACvB,CAAC;YACF,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC;AACvD,YAAA,MAAM,KAAK,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,OAAO,EAAE,GAAG,OAAO,EAAE,CAAC;YAEnD,IAAY,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AAEvD,YAAA,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;gBACtB,IAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AACjC,aAAA;YAED,IAAI,KAAK,CAAC,MAAM,EAAE;gBAChB,KAAK,CAAC,MAAM,EAAE,CAAC;AAChB,aAAA;YAED,IAAI,KAAK,CAAC,SAAS,EAAE;AACnB,gBAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAElC,gBAAA,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAK;AAChC,oBAAA,qBAAqB,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAU,CAAC,CAAC;AACpD,iBAAC,CAAC,CAAC;AACJ,aAAA;SACF;8HA1BG,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,2BAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EADS,UAAA,EAAA,MAAM,CAAC,UAAU,IAAI,IAAI,EAAA,CAAA,CAAA;;+FAC7C,WAAW,EAAA,UAAA,EAAA,CAAA;sBADhB,UAAU;AAAC,gBAAA,IAAA,EAAA,CAAA,EAAE,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,CAAA;;AA8BrD,IAAA,OAAO,WAAW,CAAC;AACpB,CAAA;SAEe,oBAAoB,GAAA;IAClC,OAAO;AACL,QAAA,CAAC,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC;AAC1B,QAAA,MAAM,EAAE,EAAE;AACV,QAAA,OAAO,EAAE,EAAE;AACX,QAAA,OAAO,EAAE,EAAE;AACX,QAAA,KAAK,EAAE,EAAE;KACV,CAAC;AACJ;;SC5GgB,kBAAkB,CAChC,cAAsE,EACtE,GAAG,YAAkC,EAAA;AAErC,IAAA,MAAM,QAAQ,GACZ,OAAO,cAAc,KAAK,UAAU;AAClC,UAAE,CAAC,cAAc,EAAE,GAAG,YAAY,CAAC;UACjC,YAAY,CAAC;IAEnB,OAAO,CAAC,UAAU,KAChB,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;AACpE,CAAC;SAEe,IAAI,GAAA;AAClB,IAAA,OAAO,SAAc,CAAC;AACxB;;AClOgB,SAAA,WAAW,CAGzB,GAAQ,EAAE,IAAU,EAAA;IACpB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAC5B,CAAC,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EACtE,EAAE,CACwB,CAAC;AAC/B;;ACGM,SAAU,YAAY,CAI1B,cAEY,EAAA;IAEZ,OAAO,CAAC,KAAK,KAAI;AACf,QAAA,MAAM,OAAO,GAAG,cAAc,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACtE,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAExD,OAAO;AACL,YAAA,GAAG,KAAK;YACR,MAAM;YACN,OAAO,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,OAAO,EAAE;YACzC,OAAO;SAC8C,CAAC;AAC1D,KAAC,CAAC;AACJ;;ACdM,SAAU,SAAS,CAAyC,KAGjE,EAAA;IACC,OAAO,CAAC,KAAK,KAAI;AACf,QAAA,MAAM,UAAU,GAAG,CAAC,IAAwB,KAAI;AAC9C,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAEtC,YAAA,OAAO,IAAI;kBACP,MAAK;AACH,oBAAA,IAAI,WAAW,EAAE;AACf,wBAAA,WAAW,EAAE,CAAC;AACf,qBAAA;AAED,oBAAA,IAAI,CAAC;AACH,wBAAA,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;wBACnC,GAAG,KAAK,CAAC,MAAM;wBACf,GAAG,KAAK,CAAC,OAAO;wBAChB,GAAG,KAAK,CAAC,OAAO;AACjB,qBAAA,CAAC,CAAC;iBACJ;kBACD,WAAW,CAAC;AAClB,SAAC,CAAC;QAEF,OAAO;AACL,YAAA,GAAG,KAAK;AACR,YAAA,KAAK,EAAE;AACL,gBAAA,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAC;AAC5B,gBAAA,SAAS,EAAE,UAAU,CAAC,WAAW,CAAC;AACnC,aAAA;SACF,CAAC;AACJ,KAAC,CAAC;AACJ;;ACtCM,SAAU,WAAW,CAIzB,cAOY,EAAA;IAEZ,OAAO,CAAC,KAAK,KAAI;QACf,MAAM,OAAO,GAAG,cAAc,CAAC;AAC7B,YAAA,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;YACnC,GAAG,KAAK,CAAC,MAAM;YACf,GAAG,KAAK,CAAC,OAAO;YAChB,GAAG,KAAK,CAAC,OAAO;AACjB,SAAA,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACtD,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAExD,OAAO;AACL,YAAA,GAAG,KAAK;YACR,MAAM;YACN,OAAO;YACP,OAAO,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,OAAO,EAAE;SAC+B,CAAC;AAC7E,KAAC,CAAC;AACJ;;ACpBM,SAAU,SAAS,CACvB,cAAqC,EAAA;IAKrC,OAAO,CAAC,KAAK,KAAI;AACf,QAAA,MAAM,KAAK,GACT,OAAO,cAAc,KAAK,UAAU,GAAG,cAAc,EAAE,GAAG,cAAc,CAAC;QAC3E,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAErC,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,MAAM;AAC5C,YAAA,GAAG,YAAY;AACf,YAAA,GAAG,KAAK;AACT,SAAA,CAAC,CAAC,CAAC;QAEJ,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI;AAC3C,YAAA,MAAM,KAAK,GAAG,QAAQ,CACpB,MAAO,KAAK,CAAC,YAAY,CAAC,EAA8B,CAAC,GAAG,CAAC,CAC9D,CAAC;AACF,YAAA,OAAO,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;SAC/C,EAAE,EAAuB,CAAC,CAAC;QAC5B,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACtD,MAAM,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAEtD,OAAO;AACL,YAAA,GAAG,KAAK;YACR,MAAM,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE;YACtC,OAAO;YACP,OAAO;SACmB,CAAC;AAC/B,KAAC,CAAC;AACJ;;ACxDA;;AAEG;;;;"}