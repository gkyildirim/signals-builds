{
  "version": 3,
  "sources": ["../../../../modules/signals/src/state-signal.ts", "../../../../modules/signals/src/get-state.ts", "../../../../modules/signals/src/patch-state.ts", "../../../../modules/signals/src/deep-signal.ts", "../../../../modules/signals/src/signal-state.ts", "../../../../modules/signals/src/signal-store.ts", "../../../../modules/signals/src/signal-store-feature.ts", "../../../../modules/signals/src/helpers.ts", "../../../../modules/signals/src/with-computed.ts", "../../../../modules/signals/src/with-hooks.ts", "../../../../modules/signals/src/with-methods.ts", "../../../../modules/signals/src/with-state.ts"],
  "sourcesContent": ["import { WritableSignal } from '@angular/core';\n\nexport const STATE_SIGNAL = Symbol('STATE_SIGNAL');\n\nexport type StateSignal<State extends object> = {\n  [STATE_SIGNAL]: WritableSignal<State>;\n};\n", "import { STATE_SIGNAL, StateSignal } from './state-signal';\n\nexport function getState<State extends object>(\n  stateSignal: StateSignal<State>\n): State {\n  return stateSignal[STATE_SIGNAL]();\n}\n", "import { STATE_SIGNAL, StateSignal } from './state-signal';\nimport { Prettify } from './ts-helpers';\n\nexport type PartialStateUpdater<State extends object> = (\n  state: State\n) => Partial<State>;\n\nexport function patchState<State extends object>(\n  stateSignal: StateSignal<State>,\n  ...updaters: Array<\n    Partial<Prettify<State>> | PartialStateUpdater<Prettify<State>>\n  >\n): void {\n  stateSignal[STATE_SIGNAL].update((currentState) =>\n    updaters.reduce(\n      (nextState: State, updater) => ({\n        ...nextState,\n        ...(typeof updater === 'function' ? updater(nextState) : updater),\n      }),\n      currentState\n    )\n  );\n}\n", "import {\n  computed,\n  isSignal,\n  Signal as NgSignal,\n  untracked,\n} from '@angular/core';\nimport { IsKnownRecord } from './ts-helpers';\n\n// An extended Signal type that enables the correct typing\n// of nested signals with the `name` or `length` key.\nexport interface Signal<T> extends NgSignal<T> {\n  name: unknown;\n  length: unknown;\n}\n\nexport type DeepSignal<T> = Signal<T> &\n  (IsKnownRecord<T> extends true\n    ? Readonly<{\n        [K in keyof T]: IsKnownRecord<T[K]> extends true\n          ? DeepSignal<T[K]>\n          : Signal<T[K]>;\n      }>\n    : unknown);\n\nexport function toDeepSignal<T>(signal: Signal<T>): DeepSignal<T> {\n  const value = untracked(() => signal());\n  if (!isRecord(value)) {\n    return signal as DeepSignal<T>;\n  }\n\n  return new Proxy(signal, {\n    get(target: any, prop) {\n      if (!(prop in value)) {\n        return target[prop];\n      }\n\n      if (!isSignal(target[prop])) {\n        Object.defineProperty(target, prop, {\n          value: computed(() => target()[prop]),\n          configurable: true,\n        });\n      }\n\n      return toDeepSignal(target[prop]);\n    },\n  });\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value?.constructor === Object;\n}\n", "import { signal } from '@angular/core';\nimport { STATE_SIGNAL, StateSignal } from './state-signal';\nimport { DeepSignal, toDeepSignal } from './deep-signal';\n\ntype SignalState<State extends object> = DeepSignal<State> & StateSignal<State>;\n\nexport function signalState<State extends object>(\n  initialState: State\n): SignalState<State> {\n  const stateSignal = signal(initialState as State);\n  const deepSignal = toDeepSignal(stateSignal.asReadonly());\n  Object.defineProperty(deepSignal, STATE_SIGNAL, {\n    value: stateSignal,\n  });\n\n  return deepSignal as SignalState<State>;\n}\n", "import { DestroyRef, inject, Injectable, signal, Type } from '@angular/core';\nimport { STATE_SIGNAL, StateSignal } from './state-signal';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  MergeFeatureResults,\n  SignalStoreConfig,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreProps,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStoreProps<F1> & StateSignal<Prettify<F1['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2]>\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3]>\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3, F4]>\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6]\n  >\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7]\n  >\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7, F8]\n  >\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7, F8, F9]\n  >\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\n\nexport function signalStore<F1 extends SignalStoreFeatureResult>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): Type<SignalStoreProps<F1> & StateSignal<Prettify<F1['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2]>\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3]>\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3, F4]>\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6]\n  >\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7]\n  >\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7, F8]\n  >\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\nexport function signalStore<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult,\n  F7 extends SignalStoreFeatureResult,\n  F8 extends SignalStoreFeatureResult,\n  F9 extends SignalStoreFeatureResult,\n  R extends SignalStoreFeatureResult = MergeFeatureResults<\n    [F1, F2, F3, F4, F5, F6, F7, F8, F9]\n  >\n>(\n  config: SignalStoreConfig,\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>,\n  f7: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>, F7>,\n  f8: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7]>, F8>,\n  f9: SignalStoreFeature<\n    MergeFeatureResults<[F1, F2, F3, F4, F5, F6, F7, F8]>,\n    F9\n  >\n): Type<SignalStoreProps<R> & StateSignal<Prettify<R['state']>>>;\n\nexport function signalStore(\n  ...args: [SignalStoreConfig, ...SignalStoreFeature[]] | SignalStoreFeature[]\n): Type<SignalStoreProps<any>> {\n  const signalStoreArgs = [...args];\n\n  const config: Partial<SignalStoreConfig> =\n    'providedIn' in signalStoreArgs[0]\n      ? (signalStoreArgs.shift() as SignalStoreConfig)\n      : {};\n  const features = signalStoreArgs as SignalStoreFeature[];\n\n  @Injectable({ providedIn: config.providedIn || null })\n  class SignalStore {\n    constructor() {\n      const innerStore = features.reduce(\n        (store, feature) => feature(store),\n        getInitialInnerStore()\n      );\n      const { slices, signals, methods, hooks } = innerStore;\n      const props = { ...slices, ...signals, ...methods };\n\n      (this as any)[STATE_SIGNAL] = innerStore[STATE_SIGNAL];\n\n      for (const key in props) {\n        (this as any)[key] = props[key];\n      }\n\n      const { onInit, onDestroy } = hooks;\n\n      if (onInit) {\n        onInit();\n      }\n\n      if (onDestroy) {\n        inject(DestroyRef).onDestroy(onDestroy);\n      }\n    }\n  }\n\n  return SignalStore;\n}\n\nexport function getInitialInnerStore(): InnerSignalStore {\n  return {\n    [STATE_SIGNAL]: signal({}),\n    slices: {},\n    signals: {},\n    methods: {},\n    hooks: {},\n  };\n}\n", "import {\n  EmptyFeatureResult,\n  MergeFeatureResults,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function signalStoreFeature<F1 extends SignalStoreFeatureResult>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>\n): SignalStoreFeature<EmptyFeatureResult, F1>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>\n): SignalStoreFeature<EmptyFeatureResult, MergeFeatureResults<[F1, F2]>>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>\n): SignalStoreFeature<EmptyFeatureResult, MergeFeatureResults<[F1, F2, F3]>>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4]>\n>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>;\nexport function signalStoreFeature<\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  f1: SignalStoreFeature<EmptyFeatureResult, F1>,\n  f2: SignalStoreFeature<{} & F1, F2>,\n  f3: SignalStoreFeature<MergeFeatureResults<[F1, F2]>, F3>,\n  f4: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3]>, F4>,\n  f5: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4]>, F5>,\n  f6: SignalStoreFeature<MergeFeatureResults<[F1, F2, F3, F4, F5]>, F6>\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>\n>;\n\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>\n): SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult\n>(\n  Input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >,\n  f5: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4]>,\n    F5\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4, F5]>\n>;\nexport function signalStoreFeature<\n  Input extends Partial<SignalStoreFeatureResult>,\n  F1 extends SignalStoreFeatureResult,\n  F2 extends SignalStoreFeatureResult,\n  F3 extends SignalStoreFeatureResult,\n  F4 extends SignalStoreFeatureResult,\n  F5 extends SignalStoreFeatureResult,\n  F6 extends SignalStoreFeatureResult\n>(\n  input: Input,\n  f1: SignalStoreFeature<Prettify<EmptyFeatureResult & Input>, F1>,\n  f2: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1]>,\n    F2\n  >,\n  f3: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2]>,\n    F3\n  >,\n  f4: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3]>,\n    F4\n  >,\n  f5: SignalStoreFeature<\n    MergeFeatureResults<[Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4]>,\n    F5\n  >,\n  f6: SignalStoreFeature<\n    MergeFeatureResults<\n      [Prettify<EmptyFeatureResult & Input>, F1, F2, F3, F4, F5]\n    >,\n    F6\n  >\n): SignalStoreFeature<\n  Prettify<EmptyFeatureResult & Input>,\n  MergeFeatureResults<[F1, F2, F3, F4, F5, F6]>\n>;\n\nexport function signalStoreFeature(\n  featureOrInput: SignalStoreFeature | Partial<SignalStoreFeatureResult>,\n  ...restFeatures: SignalStoreFeature[]\n): SignalStoreFeature {\n  const features =\n    typeof featureOrInput === 'function'\n      ? [featureOrInput, ...restFeatures]\n      : restFeatures;\n\n  return (inputStore) =>\n    features.reduce((store, feature) => feature(store), inputStore);\n}\n\nexport function type<T>(): T {\n  return undefined as T;\n}\n", "export function excludeKeys<\n  Obj extends Record<string, unknown>,\n  Keys extends string[]\n>(obj: Obj, keys: Keys): Omit<Obj, Keys[number]> {\n  return Object.keys(obj).reduce<Record<string, unknown>>((acc, key) => {\n    if (!keys.includes(key)) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {}) as Omit<Obj, Keys[number]>;\n}\n", "import { excludeKeys } from './helpers';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreSlices,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function withComputed<\n  Input extends SignalStoreFeatureResult,\n  Signals extends SignalsDictionary\n>(\n  signalsFactory: (\n    store: Prettify<SignalStoreSlices<Input['state']> & Input['signals']>\n  ) => Signals\n): SignalStoreFeature<Input, EmptyFeatureResult & { signals: Signals }> {\n  return (store) => {\n    const signals = signalsFactory({ ...store.slices, ...store.signals });\n    const signalsKeys = Object.keys(signals);\n    const slices = excludeKeys(store.slices, signalsKeys);\n    const methods = excludeKeys(store.methods, signalsKeys);\n\n    return {\n      ...store,\n      slices,\n      signals: { ...store.signals, ...signals },\n      methods,\n    } as InnerSignalStore<Record<string, unknown>, Signals>;\n  };\n}\n", "import { STATE_SIGNAL, StateSignal } from './state-signal';\nimport {\n  EmptyFeatureResult,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreSlices,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\ntype HookFn<Input extends SignalStoreFeatureResult> = (\n  store: Prettify<\n    SignalStoreSlices<Input['state']> &\n      Input['signals'] &\n      Input['methods'] &\n      StateSignal<Prettify<Input['state']>>\n  >\n) => void;\n\ntype HooksFactory<Input extends SignalStoreFeatureResult> = (\n  store: Prettify<\n    SignalStoreSlices<Input['state']> &\n      Input['signals'] &\n      Input['methods'] &\n      StateSignal<Prettify<Input['state']>>\n  >\n) => {\n  onInit?: () => void;\n  onDestroy?: () => void;\n};\n\nexport function withHooks<Input extends SignalStoreFeatureResult>(hooks: {\n  onInit?: HookFn<Input>;\n  onDestroy?: HookFn<Input>;\n}): SignalStoreFeature<Input, EmptyFeatureResult>;\nexport function withHooks<Input extends SignalStoreFeatureResult>(\n  hooks: HooksFactory<Input>\n): SignalStoreFeature<Input, EmptyFeatureResult>;\n\nexport function withHooks<Input extends SignalStoreFeatureResult>(\n  hooksOrFactory:\n    | {\n        onInit?: HookFn<Input>;\n        onDestroy?: HookFn<Input>;\n      }\n    | HooksFactory<Input>\n): SignalStoreFeature<Input, EmptyFeatureResult> {\n  return (store) => {\n    const storeProps = {\n      [STATE_SIGNAL]: store[STATE_SIGNAL],\n      ...store.slices,\n      ...store.signals,\n      ...store.methods,\n    };\n    const hooks =\n      typeof hooksOrFactory === 'function'\n        ? hooksOrFactory(storeProps)\n        : hooksOrFactory;\n    const createHook = (name: keyof typeof hooks) => {\n      const hook = hooks[name];\n      const currentHook = store.hooks[name];\n\n      return hook\n        ? () => {\n            if (currentHook) {\n              currentHook();\n            }\n\n            hook(storeProps);\n          }\n        : currentHook;\n    };\n\n    return {\n      ...store,\n      hooks: {\n        onInit: createHook('onInit'),\n        onDestroy: createHook('onDestroy'),\n      },\n    };\n  };\n}\n", "import { excludeKeys } from './helpers';\nimport { STATE_SIGNAL, StateSignal } from './state-signal';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  MethodsDictionary,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n  SignalStoreSlices,\n} from './signal-store-models';\nimport { Prettify } from './ts-helpers';\n\nexport function withMethods<\n  Input extends SignalStoreFeatureResult,\n  Methods extends MethodsDictionary\n>(\n  methodsFactory: (\n    store: Prettify<\n      SignalStoreSlices<Input['state']> &\n        Input['signals'] &\n        Input['methods'] &\n        StateSignal<Prettify<Input['state']>>\n    >\n  ) => Methods\n): SignalStoreFeature<Input, EmptyFeatureResult & { methods: Methods }> {\n  return (store) => {\n    const methods = methodsFactory({\n      [STATE_SIGNAL]: store[STATE_SIGNAL],\n      ...store.slices,\n      ...store.signals,\n      ...store.methods,\n    });\n    const methodsKeys = Object.keys(methods);\n    const slices = excludeKeys(store.slices, methodsKeys);\n    const signals = excludeKeys(store.signals, methodsKeys);\n\n    return {\n      ...store,\n      slices,\n      signals,\n      methods: { ...store.methods, ...methods },\n    } as InnerSignalStore<Record<string, unknown>, SignalsDictionary, Methods>;\n  };\n}\n", "import { computed } from '@angular/core';\nimport { toDeepSignal } from './deep-signal';\nimport { excludeKeys } from './helpers';\nimport { STATE_SIGNAL } from './state-signal';\nimport {\n  EmptyFeatureResult,\n  InnerSignalStore,\n  SignalsDictionary,\n  SignalStoreFeature,\n  SignalStoreFeatureResult,\n} from './signal-store-models';\n\nexport function withState<State extends object>(\n  stateFactory: () => State\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & { state: State }\n>;\nexport function withState<State extends object>(\n  state: State\n): SignalStoreFeature<\n  EmptyFeatureResult,\n  EmptyFeatureResult & { state: State }\n>;\nexport function withState<State extends object>(\n  stateOrFactory: State | (() => State)\n): SignalStoreFeature<\n  SignalStoreFeatureResult,\n  EmptyFeatureResult & { state: State }\n> {\n  return (store) => {\n    const state =\n      typeof stateOrFactory === 'function' ? stateOrFactory() : stateOrFactory;\n    const stateKeys = Object.keys(state);\n\n    store[STATE_SIGNAL].update((currentState) => ({\n      ...currentState,\n      ...state,\n    }));\n\n    const slices = stateKeys.reduce((acc, key) => {\n      const slice = computed(\n        () => (store[STATE_SIGNAL]() as Record<string, unknown>)[key]\n      );\n      return { ...acc, [key]: toDeepSignal(slice) };\n    }, {} as SignalsDictionary);\n    const signals = excludeKeys(store.signals, stateKeys);\n    const methods = excludeKeys(store.methods, stateKeys);\n\n    return {\n      ...store,\n      slices: { ...store.slices, ...slices },\n      signals,\n      methods,\n    } as InnerSignalStore<State>;\n  };\n}\n"],
  "mappings": ";AAEO,IAAM,eAAe,OAAO,cAAc;;;ACA3C,SAAU,SACd,aAA+B;AAE/B,SAAO,YAAY,YAAY,EAAC;AAClC;;;ACCM,SAAU,WACd,gBACG,UAEF;AAED,cAAY,YAAY,EAAE,OAAO,CAAC,iBAChC,SAAS,OACP,CAAC,WAAkB,aAAa;IAC9B,GAAG;IACH,GAAI,OAAO,YAAY,aAAa,QAAQ,SAAS,IAAI;MAE3D,YAAY,CACb;AAEL;;;ACtBA,SACE,UACA,UAEA,iBACK;AAmBD,SAAU,aAAgBA,SAAiB;AAC/C,QAAM,QAAQ,UAAU,MAAMA,QAAM,CAAE;AACtC,MAAI,CAAC,SAAS,KAAK,GAAG;AACpB,WAAOA;EACT;AAEA,SAAO,IAAI,MAAMA,SAAQ;IACvB,IAAI,QAAa,MAAI;AACnB,UAAI,EAAE,QAAQ,QAAQ;AACpB,eAAO,OAAO,IAAI;MACpB;AAEA,UAAI,CAAC,SAAS,OAAO,IAAI,CAAC,GAAG;AAC3B,eAAO,eAAe,QAAQ,MAAM;UAClC,OAAO,SAAS,MAAM,OAAM,EAAG,IAAI,CAAC;UACpC,cAAc;SACf;MACH;AAEA,aAAO,aAAa,OAAO,IAAI,CAAC;IAClC;GACD;AACH;AAEA,SAAS,SAAS,OAAc;AAC9B,SAAO,OAAO,gBAAgB;AAChC;;;AClDA,SAAS,cAAc;AAMjB,SAAU,YACd,cAAmB;AAEnB,QAAM,cAAc,OAAO,YAAqB;AAChD,QAAM,aAAa,aAAa,YAAY,WAAU,CAAE;AACxD,SAAO,eAAe,YAAY,cAAc;IAC9C,OAAO;GACR;AAED,SAAO;AACT;;;AChBA,SAAS,YAAY,QAAQ,YAAY,UAAAC,eAAoB;;AAoSvD,SAAU,eACX,MAAyE;AAE5E,QAAM,kBAAkB,CAAC,GAAG,IAAI;AAEhC,QAAM,SACJ,gBAAgB,gBAAgB,CAAC,IAC5B,gBAAgB,MAAK,IACtB,CAAA;AACN,QAAM,WAAW;EAEjB,MACM,YAAW;IACf,cAAA;AACE,YAAM,aAAa,SAAS,OAC1B,CAAC,OAAO,YAAY,QAAQ,KAAK,GACjC,qBAAoB,CAAE;AAExB,YAAM,EAAE,QAAQ,SAAS,SAAS,MAAK,IAAK;AAC5C,YAAM,QAAQ,EAAE,GAAG,QAAQ,GAAG,SAAS,GAAG,QAAO;AAEhD,WAAa,YAAY,IAAI,WAAW,YAAY;AAErD,iBAAW,OAAO,OAAO;AACtB,aAAa,GAAG,IAAI,MAAM,GAAG;MAChC;AAEA,YAAM,EAAE,QAAQ,UAAS,IAAK;AAE9B,UAAI,QAAQ;AACV,eAAM;MACR;AAEA,UAAI,WAAW;AACb,eAAO,UAAU,EAAE,UAAU,SAAS;MACxC;IACF;;8GAxBI,aAAW,MAAA,CAAA,GAAA,QAAA,mBAAA,WAAA,CAAA;;kHAAX,aAAW,YADS,OAAO,cAAc,KAAI,CAAA;;oGAC7C,aAAW,YAAA,CAAA;UADhB;WAAW,EAAE,YAAY,OAAO,cAAc,KAAI,CAAE;;AA4BrD,SAAO;;AAGH,SAAU,uBAAoB;AAClC,SAAO;IACL,CAAC,YAAY,GAAGA,QAAO,CAAA,CAAE;IACzB,QAAQ,CAAA;IACR,SAAS,CAAA;IACT,SAAS,CAAA;IACT,OAAO,CAAA;;AAEX;;;ACnIM,SAAU,mBACd,mBACG,cAAkC;AAErC,QAAM,WACJ,OAAO,mBAAmB,aACtB,CAAC,gBAAgB,GAAG,YAAY,IAChC;AAEN,SAAO,CAAC,eACN,SAAS,OAAO,CAAC,OAAO,YAAY,QAAQ,KAAK,GAAG,UAAU;AAClE;AAEM,SAAU,OAAI;AAClB,SAAO;AACT;;;AClOM,SAAU,YAGd,KAAU,MAAU;AACpB,SAAO,OAAO,KAAK,GAAG,EAAE,OAAgC,CAAC,KAAK,QAAO;AACnE,QAAI,CAAC,KAAK,SAAS,GAAG,GAAG;AACvB,UAAI,GAAG,IAAI,IAAI,GAAG;IACpB;AACA,WAAO;EACT,GAAG,CAAA,CAAE;AACP;;;ACCM,SAAU,aAId,gBAEY;AAEZ,SAAO,CAAC,UAAS;AACf,UAAM,UAAU,eAAe,EAAE,GAAG,MAAM,QAAQ,GAAG,MAAM,QAAO,CAAE;AACpE,UAAM,cAAc,OAAO,KAAK,OAAO;AACvC,UAAM,SAAS,YAAY,MAAM,QAAQ,WAAW;AACpD,UAAM,UAAU,YAAY,MAAM,SAAS,WAAW;AAEtD,WAAO;MACL,GAAG;MACH;MACA,SAAS,EAAE,GAAG,MAAM,SAAS,GAAG,QAAO;MACvC;;EAEJ;AACF;;;ACMM,SAAU,UACd,gBAKuB;AAEvB,SAAO,CAAC,UAAS;AACf,UAAM,aAAa;MACjB,CAAC,YAAY,GAAG,MAAM,YAAY;MAClC,GAAG,MAAM;MACT,GAAG,MAAM;MACT,GAAG,MAAM;;AAEX,UAAM,QACJ,OAAO,mBAAmB,aACtB,eAAe,UAAU,IACzB;AACN,UAAM,aAAa,CAAC,SAA4B;AAC9C,YAAM,OAAO,MAAM,IAAI;AACvB,YAAM,cAAc,MAAM,MAAM,IAAI;AAEpC,aAAO,OACH,MAAK;AACH,YAAI,aAAa;AACf,sBAAW;QACb;AAEA,aAAK,UAAU;MACjB,IACA;IACN;AAEA,WAAO;MACL,GAAG;MACH,OAAO;QACL,QAAQ,WAAW,QAAQ;QAC3B,WAAW,WAAW,WAAW;;;EAGvC;AACF;;;ACnEM,SAAU,YAId,gBAOY;AAEZ,SAAO,CAAC,UAAS;AACf,UAAM,UAAU,eAAe;MAC7B,CAAC,YAAY,GAAG,MAAM,YAAY;MAClC,GAAG,MAAM;MACT,GAAG,MAAM;MACT,GAAG,MAAM;KACV;AACD,UAAM,cAAc,OAAO,KAAK,OAAO;AACvC,UAAM,SAAS,YAAY,MAAM,QAAQ,WAAW;AACpD,UAAM,UAAU,YAAY,MAAM,SAAS,WAAW;AAEtD,WAAO;MACL,GAAG;MACH;MACA;MACA,SAAS,EAAE,GAAG,MAAM,SAAS,GAAG,QAAO;;EAE3C;AACF;;;AC5CA,SAAS,YAAAC,iBAAgB;AAwBnB,SAAU,UACd,gBAAqC;AAKrC,SAAO,CAAC,UAAS;AACf,UAAM,QACJ,OAAO,mBAAmB,aAAa,eAAc,IAAK;AAC5D,UAAM,YAAY,OAAO,KAAK,KAAK;AAEnC,UAAM,YAAY,EAAE,OAAO,CAAC,kBAAkB;MAC5C,GAAG;MACH,GAAG;MACH;AAEF,UAAM,SAAS,UAAU,OAAO,CAAC,KAAK,QAAO;AAC3C,YAAM,QAAQA,UACZ,MAAO,MAAM,YAAY,EAAC,EAA+B,GAAG,CAAC;AAE/D,aAAO,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,aAAa,KAAK,EAAC;IAC7C,GAAG,CAAA,CAAuB;AAC1B,UAAM,UAAU,YAAY,MAAM,SAAS,SAAS;AACpD,UAAM,UAAU,YAAY,MAAM,SAAS,SAAS;AAEpD,WAAO;MACL,GAAG;MACH,QAAQ,EAAE,GAAG,MAAM,QAAQ,GAAG,OAAM;MACpC;MACA;;EAEJ;AACF;",
  "names": ["signal", "signal", "computed"]
}
